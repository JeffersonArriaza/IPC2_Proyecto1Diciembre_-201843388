import xml.etree.ElementTree as ET
from Clases import Artistas, Albums, Cancion, Temporal
from Listas import *
from os import system
from tkinter import *
from tkinter import filedialog
#import pygame


listaDeArtistas = ListaDoblementeE()
listaTemporal = ListaDoblementeE()

mi_archivo = ET.parse("ArchivosEntrada.xml")
padre = mi_archivo.getroot()

for hijo in padre:
    nombreCancion = hijo.attrib['nombre']
    contad = 0
    for subhijo in hijo:
        if contad == 0:
            artista = subhijo.text
        if contad == 1:
            album = subhijo.text
        if contad == 2:
            imagen = subhijo.text
        if contad == 3:
            ruta = subhijo.text
        contad = contad + 1

    temp = Temporal(nombreCancion, artista, album, imagen, ruta)
    listaTemporal.InsertarDatos(temp)

for objeto in listaTemporal.RecorrerLista():
    if listaDeArtistas.contador == 0:
        NuevoArtista = Artistas(objeto.artista)
        NuevoAlbum = Albums(objeto.album, objeto.imagen)
        NuevaCancion = Cancion(objeto.nombreCancion, objeto.ruta)
        NuevoAlbum.insertarCancion(NuevaCancion)
        NuevoArtista.insertarAlbum(NuevoAlbum)
        listaDeArtistas.InsertarDatos(NuevoArtista)

    else:
        for artista in listaDeArtistas.RecorrerLista():
            if artista.nombre == objeto.artista:
                print("El Artista esta Repetido")
                for album in artista.listadeAlbums.recorrer():
                    if album.nombre == objeto.album:
                        print("El Album esta repetido")
                        NuevaCancion = Cancion(objeto.nombredeCancion, objeto.ruta)
                        album.insertarCancion(NuevaCancion)
                        break

                    else:
                        NuevoAlbum = Albums(objeto.album, objeto.imagen)
                        NuevaCancion = Cancion(objeto.nombredeCancion, objeto.ruta)
                        NuevoAlbum.insertarCancion(NuevaCancion)
                        artista.insertarAlbum(NuevoAlbum)
                        break
            else:
                NuevoArtista = Artistas(objeto.artista)
                NuevoAlbum = Albums(objeto.album, objeto.imagen)
                NuevaCancion = Cancion(objeto.nombredeCancion, objeto.ruta)
                NuevoAlbum.insertarCancion(NuevaCancion)
                NuevoArtista.insertarAlbum(NuevoAlbum)
                listaDeArtistas.InsertarDatos(NuevoArtista)
                break
        break


for artista in listaDeArtistas.RecorrerLista():

    print("Artista: ", artista.nombre)
    for album in artista.listadeAlbums.RecorrerLista():

        print("Album: ", album.nombre)
        print("Imagen de Album: ", album.imagen)
        for cancion in album.listadeCanciones.RecorrerLista():
            print("Cancion: ", cancion.nombre)
            print("Ruta: ", cancion.ruta)

#Graphviz
archivo = open("Reporte.dot", "w")
archivo.write('digraph grid {layout=dot labelloc = "t"edge [   arrowtail="open" ] rankdir="LR"')

for artista in listaDeArtistas.RecorrerLista():
        archivo.write(artista.nombre +"\n")
for artista in listaDeArtistas.RecorrerLista():
         archivo.write(artista.nombre + "->"+"\n")
archivo.write('"Null :3"\n')

for artista in listaDeArtistas.RecorrerLista():
   for album in artista.listadeAlbums.RecorrerLista():
       archivo.write(artista.nombre + "->" + album.nombre+"\n")

for artista in listaDeArtistas.RecorrerLista():
    for album in artista.listadeAlbums.RecorrerLista():
       for cancion in album.listadeCanciones.RecorrerLista():
           archivo.write(album.nombre + "->" + cancion.nombre+"\n")



archivo.write("}")
archivo.close()

system("dot.exe -Tpng Reporte.dot -o Reporte.png")
system("Reporte.png")

#import xml.etree.ElementTree as ET
ListasReproduccion = ET.Element("ListaReproduccion")
Lista =ET.SubElement(ListasReproduccion,"Lista")
Lista.set("nombre", "nombre")

#Interfaz Grafica

ventana =Tk()
ventana.title("AppMusic")
ventana.geometry("400x400")
#pygame.mixer.imit()

Pantalla = Listbox(ventana, bg="beige", fg="blue", width=65, selectbackground="white", selectforeground="black")
Pantalla.pack(pady=10, anchor=CENTER)
Pantalla.config(bg="white", font=("Verdana", 16))

def a√±adir_musica():
    canciones = filedialog.askopenfilenames(initialdir="/", title="Escoge una cancion", filetypes=(("mp3", "*.mp3",),("all files", "*.*")))
    for cancion in canciones:
        cancion=cancion.replace(r"C:\Users\jefri\Desktop\Cursos Vacacionales\Laboratorio\proyectos\Musica\musica", "")
        cancion=cancion.replace(".mp3", "")
        Pantalla.insert(END, cancion)

def reproducir():
    cancion = Pantalla.get(ACTIVE)
    cancion= f"{cancion}.mp3"
    Pantalla.insert(END, cancion)

def detener():
    pygame.mixer.music.stop()
    Pantalla.select_clear(ACTIVE)

botones = Frame(ventana)
botones.pack()

atras = Button(botones, text = "Anterior", command= "Anterior")
atras.grid(row=0, column=0)

reproducir= Button(botones, text = "Play", command= reproducir)
reproducir.grid(row=0, column=1)

pausar = Button(botones, text = "Anterior", command= detener)
pausar.grid(row=0, column=2)

detener= Button(botones, text = "Anterior", command= lambda: pausar(pausar))
detener.grid(row=0, column=3)

siguiente = Button(botones, text = "Siguiente", command= "siguiente")
siguiente.grid(row=0, column=4)

MenuBarra = Menu(ventana)
ventana.config(menu=MenuBarra)

ventana.mainloop()